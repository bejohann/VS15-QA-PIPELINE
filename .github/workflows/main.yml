name: CI/CD Pipeline
permissions:
  contents: write
  pages: write

on:
  pull_request:
    types: [opened, reopened]
  workflow_dispatch:
    
jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Configurando Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Maven dependencies
        run: mvn clean install -DskipTests

  Health-check:
    runs-on: ubuntu-latest
    needs: Build
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Run Health Check Test
        run: mvn test -Dgroups=Health-Check
      - name: Upload Allure Results
        uses: actions/upload-artifact@v4
        with:
          name: allure-health-check
          path: allure-results

  Contract-test:
    runs-on: ubuntu-latest
    needs: Health-check
    if: needs.Health-check.result != 'failed'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Run Contract tests
        run: mvn test -Dgroups=Contrato
      - name: Upload Allure Results
        uses: actions/upload-artifact@v4
        with:
          name: allure-contract-test
          path: allure-results

  Functional-test:
    runs-on: ubuntu-latest
    needs: Contract-test
    if: needs.Contract-test.result != 'failed'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Run Functional tests
        run: mvn test -Dgroups=Funcional
      - name: Upload Allure Results
        uses: actions/upload-artifact@v4
        with:
          name: allure-functional-test
          path: allure-results

  Allure-report:
    runs-on: ubuntu-latest
    needs: Functional-test
    if: always()
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Download Health Check Artifact
        uses: actions/download-artifact@v4
        with:
          name: allure-health-check
          path: temp/allure-health-check

      - name: Download Contract Test Artifact
        uses: actions/download-artifact@v4
        with:
          name: allure-contract-test
          path: temp/allure-contract-test

      - name: Download Functional Test Artifact
        uses: actions/download-artifact@v4
        with:
          name: allure-functional-test
          path: temp/allure-functional-test

      - name: Merge Allure Results
        run: |
          mkdir -p merged-allure-results
          cp -R temp/allure-health-check/* merged-allure-results/ || true
          cp -R temp/allure-contract-test/* merged-allure-results/ || true
          cp -R temp/allure-functional-test/* merged-allure-results/ || true
          ls -la merged-allure-results

      - name: Allure Report action from marketplace
        uses: simple-elf/allure-report-action@master
        if: always()
        id: allure-report
        with:
          allure_results: merged-allure-results
          gh_pages: gh-pages
          allure_report: allure-report
          allure_history: allure-history

      - name: Publish Allure Report
        uses: peaceiris/actions-gh-pages@v3
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: allure-history

      - name: Sleep for 30 seconds
        run: sleep 30s
        shell: bash

  Discord-report:
    runs-on: ubuntu-latest
    needs: [Allure-report, Functional-test, Contract-test, Health-check, Build]
    if: always()
    env:
      DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Send Discord Notification
        run: |
          curl -H "Content-Type: application/json" \
          -X POST \
          -d '{
          "username": "Megazord QA",
          "embeds": [
          {
            "title": "üì¢ Deploy do Allure Report!",
            "description": "O Allure Report est√° no ar e pronto para ser visto. Click no link no t√≠tulo.",
            "url": "https://bejohann.github.io/VS15-QA-PIPELINE",
            "color": 3066993,
            "fields": [
              {
                "name": "üèóÔ∏è Build",
                "value": "**${{needs.Build.result}}**",
                "inline": true
              },
              {
              "name": "ü©∫  Health Check",
              "value": "**${{needs.Health-check.result}}**",
              "inline": true
              },
              {
              "name": "üìú Contrato",
              "value": "**${{needs.Contract-test.result}}**",
              "inline": true
              },
              {
              "name": "üõ†Ô∏è Funcional",
              "value": "**${{needs.Functional-test.result}}**",
              "inline": true
              },
              {
              "name": "üìä Allure Report",
              "value": "**${{needs.Allure-report.result}}**",
              "inline": true
              },
              {
              "name": "‚ö° Evento",
              "value": "**${{ github.event_name }}**",
              "inline": true
              },
              {
              "name": "üë§ Deploy feito por",
              "value": "[**${{ github.actor }}**](https://github.com/${{ github.actor }})",
              "inline": false
              }
            ],
            "footer": {
              "text": "Deploy via GitHub Actions"

            },
            "timestamp": "'$(date -u +%Y-%m-%dT%H:%M:%SZ)'"
          }
          ]
          }' \
          ${{ secrets.DISCORD_WEBHOOK }}
  CodeQL:
    runs-on: ubuntu-latest
    needs: Build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          queries: +security-extended
          languages: java
          build-mode: none

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
    
